// <auto-generated />
using System;
using ClinicaBackend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicaBackend.Migrations
{
    [DbContext(typeof(ClinicaContext))]
    [Migration("20241118145134_EliminacionEmail")]
    partial class EliminacionEmail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ClinicaServices.Models.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Localidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Nombre = "San Justo"
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Nombre = "Videla"
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            Nombre = "Reconquista"
                        },
                        new
                        {
                            Id = 4,
                            Eliminado = false,
                            Nombre = "Avellaneda"
                        },
                        new
                        {
                            Id = 5,
                            Eliminado = false,
                            Nombre = "Vera"
                        },
                        new
                        {
                            Id = 6,
                            Eliminado = false,
                            Nombre = "Romang"
                        });
                });

            modelBuilder.Entity("ClinicaServices.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Matricula")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Tecnica")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Medicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Perez",
                            Eliminado = false,
                            Matricula = "1234",
                            Nombre = "Juan",
                            Tecnica = 2,
                            Telefono = "3498123465"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Gomez",
                            Eliminado = false,
                            Matricula = "5678",
                            Nombre = "Maria",
                            Tecnica = 1,
                            Telefono = "3498456754"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Gonzalez",
                            Eliminado = false,
                            Matricula = "9876",
                            Nombre = "Carlos",
                            Tecnica = 3,
                            Telefono = "3498564532"
                        });
                });

            modelBuilder.Entity("ClinicaServices.Models.Mutual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Mutuales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Nombre = "OSDE"
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Nombre = "IAPOS"
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            Nombre = "OSPIL"
                        },
                        new
                        {
                            Id = 4,
                            Eliminado = false,
                            Nombre = "SANCOR"
                        },
                        new
                        {
                            Id = 5,
                            Eliminado = false,
                            Nombre = "JERARQUICOS SALUD"
                        },
                        new
                        {
                            Id = 6,
                            Eliminado = false,
                            Nombre = "OSDOP"
                        });
                });

            modelBuilder.Entity("ClinicaServices.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("LocalidadId")
                        .HasColumnType("int");

                    b.Property<int>("MutualId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("LocalidadId");

                    b.HasIndex("MutualId");

                    b.ToTable("Pacientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Peresin",
                            Direccion = "San Roque 1932",
                            Documento = "46041117",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(2004, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 1,
                            MutualId = 1,
                            Nombre = "Lautaro",
                            Telefono = "3498404954"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Perez",
                            Direccion = "Independencia",
                            Documento = "12345678",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1999, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 1,
                            MutualId = 2,
                            Nombre = "Juan",
                            Telefono = "3498459821"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Gomez",
                            Direccion = "Belgrano 123",
                            Documento = "87654321",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1987, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 2,
                            MutualId = 1,
                            Nombre = "Maria",
                            Telefono = "3512367890"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Lopez",
                            Direccion = "Mitre 456",
                            Documento = "45678912",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1975, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 1,
                            MutualId = 3,
                            Nombre = "Carlos",
                            Telefono = "3517896543"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Martinez",
                            Direccion = "Rivadavia 789",
                            Documento = "11223344",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1990, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 1,
                            MutualId = 2,
                            Nombre = "Ana",
                            Telefono = "3541556789"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Fernandez",
                            Direccion = "San Martin 101",
                            Documento = "33445566",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1982, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 2,
                            MutualId = 1,
                            Nombre = "Luis",
                            Telefono = "3519987654"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Diaz",
                            Direccion = "Sarmiento 234",
                            Documento = "55667788",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1995, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 3,
                            MutualId = 4,
                            Nombre = "Sofia",
                            Telefono = "3511122334"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "Sanchez",
                            Direccion = "Lavalle 432",
                            Documento = "22334455",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1979, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 1,
                            MutualId = 3,
                            Nombre = "Jorge",
                            Telefono = "3516677889"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Mendez",
                            Direccion = "Alsina 567",
                            Documento = "99887766",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1988, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 1,
                            MutualId = 1,
                            Nombre = "Laura",
                            Telefono = "3513344556"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "Ruiz",
                            Direccion = "Peron 890",
                            Documento = "44556677",
                            Eliminado = false,
                            FechaNacimiento = new DateTime(1992, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocalidadId = 2,
                            MutualId = 4,
                            Nombre = "Miguel",
                            Telefono = "3517766554"
                        });
                });

            modelBuilder.Entity("ClinicaServices.Models.Practica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Tecnica")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Practicas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            Nombre = "Abdominal",
                            Precio = 0m,
                            Tecnica = 2
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            Nombre = "Hepatobiliopancreatica",
                            Precio = 0m,
                            Tecnica = 2
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            Nombre = "Ginecologicas",
                            Precio = 0m,
                            Tecnica = 2
                        },
                        new
                        {
                            Id = 4,
                            Eliminado = false,
                            Nombre = "Partes blandas - Pie",
                            Precio = 0m,
                            Tecnica = 2
                        },
                        new
                        {
                            Id = 5,
                            Eliminado = false,
                            Nombre = "Partes blandas - Mano",
                            Precio = 0m,
                            Tecnica = 2
                        },
                        new
                        {
                            Id = 6,
                            Eliminado = false,
                            Nombre = "Partes blandas - Rodilla",
                            Precio = 0m,
                            Tecnica = 2
                        },
                        new
                        {
                            Id = 7,
                            Eliminado = false,
                            Nombre = "Partes blandas - Codo",
                            Precio = 0m,
                            Tecnica = 2
                        },
                        new
                        {
                            Id = 8,
                            Eliminado = false,
                            Nombre = "Craneo frente",
                            Precio = 0m,
                            Tecnica = 1
                        },
                        new
                        {
                            Id = 9,
                            Eliminado = false,
                            Nombre = "Craneo perfil",
                            Precio = 0m,
                            Tecnica = 1
                        },
                        new
                        {
                            Id = 10,
                            Eliminado = false,
                            Nombre = "Cavum",
                            Precio = 0m,
                            Tecnica = 1
                        },
                        new
                        {
                            Id = 11,
                            Eliminado = false,
                            Nombre = "Columna cervical frente",
                            Precio = 0m,
                            Tecnica = 1
                        },
                        new
                        {
                            Id = 12,
                            Eliminado = false,
                            Nombre = "Columna dorsal frente",
                            Precio = 0m,
                            Tecnica = 1
                        },
                        new
                        {
                            Id = 13,
                            Eliminado = false,
                            Nombre = "Columna lumbar frente",
                            Precio = 0m,
                            Tecnica = 1
                        },
                        new
                        {
                            Id = 14,
                            Eliminado = false,
                            Nombre = "Columna cervical perfil",
                            Precio = 0m,
                            Tecnica = 1
                        },
                        new
                        {
                            Id = 57,
                            Eliminado = false,
                            Nombre = "Oftalmologica",
                            Precio = 0m,
                            Tecnica = 3
                        },
                        new
                        {
                            Id = 58,
                            Eliminado = false,
                            Nombre = "Tiroidea",
                            Precio = 0m,
                            Tecnica = 3
                        },
                        new
                        {
                            Id = 59,
                            Eliminado = false,
                            Nombre = "Mamaria",
                            Precio = 0m,
                            Tecnica = 3
                        },
                        new
                        {
                            Id = 60,
                            Eliminado = false,
                            Nombre = "Ginecologica",
                            Precio = 0m,
                            Tecnica = 3
                        },
                        new
                        {
                            Id = 61,
                            Eliminado = false,
                            Nombre = "Abdominal",
                            Precio = 0m,
                            Tecnica = 3
                        },
                        new
                        {
                            Id = 62,
                            Eliminado = false,
                            Nombre = "Hepatobiliar",
                            Precio = 0m,
                            Tecnica = 3
                        });
                });

            modelBuilder.Entity("ClinicaServices.Models.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Atendido")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("Coseguro")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("FechaConsulta")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FormaPago")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoDerivanteId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoEfectorId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("PracticaId")
                        .HasColumnType("int");

                    b.Property<int?>("Tecnica")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoDerivanteId");

                    b.HasIndex("MedicoEfectorId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("PracticaId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("ClinicaServices.Models.Paciente", b =>
                {
                    b.HasOne("ClinicaServices.Models.Localidad", "Localidad")
                        .WithMany()
                        .HasForeignKey("LocalidadId");

                    b.HasOne("ClinicaServices.Models.Mutual", "Mutual")
                        .WithMany()
                        .HasForeignKey("MutualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localidad");

                    b.Navigation("Mutual");
                });

            modelBuilder.Entity("ClinicaServices.Models.Turno", b =>
                {
                    b.HasOne("ClinicaServices.Models.Medico", "MedicoDerivante")
                        .WithMany()
                        .HasForeignKey("MedicoDerivanteId");

                    b.HasOne("ClinicaServices.Models.Medico", "MedicoEfector")
                        .WithMany()
                        .HasForeignKey("MedicoEfectorId");

                    b.HasOne("ClinicaServices.Models.Paciente", "Paciente")
                        .WithMany("TurnosAtendidos")
                        .HasForeignKey("PacienteId");

                    b.HasOne("ClinicaServices.Models.Practica", "Practica")
                        .WithMany()
                        .HasForeignKey("PracticaId");

                    b.Navigation("MedicoDerivante");

                    b.Navigation("MedicoEfector");

                    b.Navigation("Paciente");

                    b.Navigation("Practica");
                });

            modelBuilder.Entity("ClinicaServices.Models.Paciente", b =>
                {
                    b.Navigation("TurnosAtendidos");
                });
#pragma warning restore 612, 618
        }
    }
}
